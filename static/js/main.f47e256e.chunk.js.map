{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","children","Number","this","props","accountBalance","toFixed","Component","Home","_jsx","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","_this","call","handleChange","e","updatedUser","_objectSpread","state","user","target","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","Array","from","credits","map","credit","date","slice","amount","description","id","addCredit","length","Date","toJSON","step","Debits","debits","debit","addDebit","App","creditInput","creditList","push","updateBalance","debitInput","debitList","logInInfo","newUser","currentUser","totalCredit","totalDebit","i","_componentDidMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","linkToDebitAPI","creditResponse","debitResponse","wrap","_context","prev","next","axios","get","sent","console","log","data","t0","response","status","stop","_this2","Router","basename","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f47e256e.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {Number(this.props.accountBalance.toFixed(2))}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nconst Credits = (props) => {\n  // Create the list of Credit items\n  let creditsView = () => {\n    const creditsArray =  Array.from(props.credits);\n    return creditsArray.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = credit.date.slice(0,10); \n      return <li key={credit.id}>{credit.amount.toFixed(2)} {credit.description} {date}</li>\n    });\n  }\n\n  // When user clicks Add Credit button, store user data and update current balance\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    props.addCredit({\n      id: props.credits.length + 1,\n      description: e.target[0].value,\n      amount: Number(e.target[1].value),\n      date: new Date().toJSON()\n    });\n  }\n  \n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n      <br/><br/>\n\n      <form onSubmit={handleSubmit}>\n        <label>Description</label>\n        <input type=\"text\" name=\"description\" />\n        <label>Amount</label>\n        <input type=\"number\" step=\"any\" name=\"amount\" />\n        <button type=\"submit\" >Add Credit</button>\n      </form>\n\n      <br/><br/>\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br></br>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const DebitsArray =  Array.from(props.debits);\n    return DebitsArray.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount.toFixed(2)} {debit.description} {date}</li>\n    });\n  }\n\n  // When user clicks Add Credit button, store user data and update current balance\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    props.addDebit({\n      id: props.debits.length + 1,\n      description: e.target[0].value,\n      amount: Number(e.target[1].value),\n      date: new Date().toJSON()\n    });\n  }\n  \n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n      <br/><br/>\n\n      <form onSubmit={handleSubmit}>\n        <label>Description</label>\n        <input type=\"text\" name=\"description\" />\n        <label>Amount</label>\n        <input type=\"number\" step=\"any\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/><br/>\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br></br>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update current total balance \n  updateBalance(){\n    let totalCredit = 0;\n    let totalDebit = 0;\n\n    for (let i = 0; i < this.state.creditList.length; i++){\n      totalCredit += Number(this.state.creditList[i].amount.toFixed(2));\n    }\n    for (let i = 0; i < this.state.debitList.length; i++){\n      totalDebit += Number(this.state.debitList[i].amount.toFixed(2));\n    }\n\n    this.setState({\n      accountBalance: totalCredit - totalDebit\n    });\n  }\n\n  // Update state's credit based on user input of new credits\n  addCredit = (creditInput) => {\n    // Add Credit Item to creditList\n    this.state.creditList.push({\n      id: creditInput.id,\n      description: creditInput.description,\n      amount: creditInput.amount,\n      date: creditInput.date\n    })\n    // Rerender to display updated information\n    this.setState({creditList: this.state.creditList}, () => this.updateBalance());\n  }\n\n  // Update state's debit based on user input of new debits\n  addDebit = (debitInput) => {\n    // Add Debit Item to debitList\n    this.state.debitList.push({\n      id: debitInput.id,\n      description: debitInput.description,\n      amount: debitInput.amount,\n      date: debitInput.date\n    })\n    // Rerender to display updated information\n    this.setState({debitList: this.state.debitList}, () => this.updateBalance());\n  }\n\n  // Lifecycle Method componentDidMount() which includes the API requests using given endpoints \n  async componentDidMount() {\n    let linkToCreditAPI = 'https://johnnylaicode.github.io/api/credits.json';\n    let linkToDebitAPI = 'https://johnnylaicode.github.io/api/debits.json';\n\n    // Await for promise (completion) returned from API calls\n    try {\n      let creditResponse = await axios.get(linkToCreditAPI);\n      let debitResponse = await axios.get(linkToDebitAPI);\n\n      console.log(creditResponse); // Prints out credit Response\n      console.log(debitResponse); // Prints out debit Response\n\n      // To get data object in the response, use \"response.data\"\n      this.setState({creditList: creditResponse.data});\n      this.setState({debitList: debitResponse.data});\n\n    }\n    catch(error) { // Print out errors on console when tehre is an error response\n      if (error.response){\n        // The request was made, and server responded with error message and status code.\n        console.log(error.creditResponse.data); // Print out error message(e.g., Not Found)\n        console.log(error.creditResponse.status); // Print out error status code (e.g., 404)\n      \n        console.log(error.debitResponse.data); // Print out error message(e.g., Not Found)\n        console.log(error.debitResponse.status); // Print out error status code (e.g., 404)\n      }\n    }\n\n    this.updateBalance();\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n  \n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredit={this.addCredit} updateBalance={this.updateBalance}/>) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit} updateBalance={this.updateBalance}  />) \n    \n    \n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/assignment-4-bank_of_react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}