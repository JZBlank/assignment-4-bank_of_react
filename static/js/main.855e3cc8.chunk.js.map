{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","children","Number","this","props","accountBalance","toFixed","Component","Home","Container","sx","mt","_jsx","Typography","variant","src","alt","UserProfile","userName","memberSince","Link","to","LogIn","_this","call","handleChange","e","updatedUser","_objectSpread","state","user","target","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","Array","from","credits","map","credit","date","slice","amount","description","id","addCredit","length","Date","toJSON","step","Debits","debits","debit","addDebit","App","creditInput","creditList","push","updateBalance","debitInput","debitList","logInInfo","newUser","currentUser","totalCredit","totalDebit","i","_componentDidMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","linkToDebitAPI","creditResponse","debitResponse","wrap","_context","prev","next","axios","get","sent","console","log","data","t0","response","status","stop","_this2","Router","basename","Layout","Route","exact","path","render","AppBar","backgroundColor","Toolbar","Box","display","gap","textDecoration","color","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.855e3cc8.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {Number(this.props.accountBalance.toFixed(2))}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\n\n/* Material UI Components */\nimport {Container, Typography} from \"@mui/material/\";\n\nclass Home extends Component {\n  render() {\n    return <Container sx={{mt:\"100px\"}}>\n    <Typography variant=\"h2\">Welcome to Bank of React</Typography>\n    <br/><br/>\n    <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n    <br/><br/>\n    <AccountBalance accountBalance={this.props.accountBalance}/>\n\n  </Container>\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {Container} from \"@mui/material/\";\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <Container sx={{mt:\"100px\"}}>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </Container>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nimport {Container} from \"@mui/material/\";\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <Container sx={{mt:\"100px\"}}>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </Container>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nimport {Container} from \"@mui/material/\";\n\nconst Credits = (props) => {\n  // Create the list of Credit items\n  let creditsView = () => {\n    const creditsArray =  Array.from(props.credits);\n    return creditsArray.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = credit.date.slice(0,10); \n      return <li key={credit.id}>{credit.amount.toFixed(2)} {credit.description} {date}</li>\n    });\n  }\n\n  // When user clicks Add Credit button, store user data and update current balance\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    props.addCredit({\n      id: props.credits.length + 1,\n      description: e.target[0].value,\n      amount: Number(e.target[1].value),\n      date: new Date().toJSON()\n    });\n  }\n  \n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <Container sx={{mt:\"100px\"}}>\n      <h1>Credits</h1>\n\n      {creditsView()}\n      <br/><br/>\n\n      <form onSubmit={handleSubmit}>\n        <label>Description</label>\n        <input type=\"text\" name=\"description\" />\n        <label>Amount</label>\n        <input type=\"number\" step=\"any\" name=\"amount\" />\n        <button type=\"submit\" >Add Credit</button>\n      </form>\n\n      <br/><br/>\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br></br>\n      <Link to=\"/\">Return to Home</Link>\n\n    </Container>\n  );\n}\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nimport {Container} from \"@mui/material/\";\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const DebitsArray =  Array.from(props.debits);\n    return DebitsArray.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount.toFixed(2)} {debit.description} {date}</li>\n    });\n  }\n\n  // When user clicks Add Credit button, store user data and update current balance\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    props.addDebit({\n      id: props.debits.length + 1,\n      description: e.target[0].value,\n      amount: Number(e.target[1].value),\n      date: new Date().toJSON()\n    });\n  }\n  \n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <Container sx={{mt:\"100px\"}}>\n      <h1>Debits</h1>\n\n      {debitsView()}\n      <br/><br/>\n\n      <form onSubmit={handleSubmit}>\n        <label>Description</label>\n        <input type=\"text\" name=\"description\" />\n        <label>Amount</label>\n        <input type=\"number\" step=\"any\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/><br/>\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br></br>\n      <Link to=\"/\">Return to Home</Link>\n    </Container>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios';\n\n/* Material UI Components */\nimport {AppBar, Toolbar, Box, Typography} from \"@mui/material/\";\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update current total balance \n  updateBalance(){\n    let totalCredit = 0;\n    let totalDebit = 0;\n\n    for (let i = 0; i < this.state.creditList.length; i++){\n      totalCredit += Number(this.state.creditList[i].amount.toFixed(2));\n    }\n    for (let i = 0; i < this.state.debitList.length; i++){\n      totalDebit += Number(this.state.debitList[i].amount.toFixed(2));\n    }\n\n    this.setState({\n      accountBalance: totalCredit - totalDebit\n    });\n  }\n\n  // Update state's credit based on user input of new credits\n  addCredit = (creditInput) => {\n    // Add Credit Item to creditList\n    this.state.creditList.push({\n      id: creditInput.id,\n      description: creditInput.description,\n      amount: creditInput.amount,\n      date: creditInput.date\n    })\n    // Rerender to display updated information\n    this.setState({creditList: this.state.creditList}, () => this.updateBalance());\n  }\n\n  // Update state's debit based on user input of new debits\n  addDebit = (debitInput) => {\n    // Add Debit Item to debitList\n    this.state.debitList.push({\n      id: debitInput.id,\n      description: debitInput.description,\n      amount: debitInput.amount,\n      date: debitInput.date\n    })\n    // Rerender to display updated information\n    this.setState({debitList: this.state.debitList}, () => this.updateBalance());\n  }\n\n  // Lifecycle Method componentDidMount() which includes the API requests using given endpoints \n  async componentDidMount() {\n    let linkToCreditAPI = 'https://johnnylaicode.github.io/api/credits.json';\n    let linkToDebitAPI = 'https://johnnylaicode.github.io/api/debits.json';\n\n    // Await for promise (completion) returned from API calls\n    try {\n      let creditResponse = await axios.get(linkToCreditAPI);\n      let debitResponse = await axios.get(linkToDebitAPI);\n\n      console.log(creditResponse); // Prints out credit Response\n      console.log(debitResponse); // Prints out debit Response\n\n      // To get data object in the response, use \"response.data\"\n      this.setState({creditList: creditResponse.data});\n      this.setState({debitList: debitResponse.data});\n\n    }\n    catch(error) { // Print out errors on console when tehre is an error response\n      if (error.response){\n        // The request was made, and server responded with error message and status code.\n        console.log(error.creditResponse.data); // Print out error message(e.g., Not Found)\n        console.log(error.creditResponse.status); // Print out error status code (e.g., 404)\n      \n        console.log(error.debitResponse.data); // Print out error message(e.g., Not Found)\n        console.log(error.debitResponse.status); // Print out error status code (e.g., 404)\n      }\n    }\n\n    this.updateBalance();\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n  \n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredit={this.addCredit} updateBalance={this.updateBalance}/>) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit} updateBalance={this.updateBalance}  />) \n    \n    \n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/assignment-4-bank_of_react\">\n        <div>\n          <Layout></Layout>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nfunction Layout() {\n  return <div>\n    <AppBar sx={{backgroundColor: \"#61DAFB\"}}>\n      <Toolbar>\n          <Box display=\"flex\" sx={{gap:\"2rem\", '& a': {textDecoration: 'none', color: 'black'}}}> \n            <Link to=\"/userProfile\"><Typography variant=\"h6\">User Profile</Typography></Link>\n            <Link to=\"/login\"><Typography variant=\"h6\">Login</Typography></Link>\n            <Link to=\"/credits\"><Typography variant=\"h6\">Credits</Typography></Link>\n            <Link to=\"/debits\"><Typography variant=\"h6\">Debits</Typography></Link>\n          </Box>\n      </Toolbar>\n    </AppBar>\n  </div>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}